// 3 bit-buffer 

module lab2 (out, in); 
	input [2:0]in; 
	output [2:0]out; 

	assign out = in; 

endmodule

=================================================

// Example circuit. 

module lab2 (x,y,a,b,c,d); 
	input a,b,c,d; 
	output x,y; 

	assign x = a & b;
	assign y = a | b; 

endmodule

=================================================

// Example circuit. 

module lab2 (f, x1, x2, x3); 
	input x1, x2, x3; 
	output f;
	wire g, y, h;  

	assign g = x1 & x2;
	assign y = ~x2;
	assign h = y & x3; 
	
	assign f = g | h; 

endmodule

OR,
// Structural representation 

module lab2 (f, x1, x2, x3); 
	input x1, x2, x3; 
	output f;
	wire g, y, h;  

	and(g, x1, x2);
	not(y, x2);
	and(h, y, x3);

	or(f, g, h); 

endmodule

=================================================

// Full Adder. 

module lab2 (S, Cout, A, B, Cin); 
	input A, B, Cin; 
	output S, Cout; 

	assign S = A ^ B ^ Cin;
	assign Cotu = (A & B) | (Cin & (A ^ B)); 

endmodule

